@using WebMatrix.Data;
@using System.Configuration;
@using System.Data.SqlClient;
@{
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\WeddingDB.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";

    Database db = Database.OpenConnectionString(connectionString, provider);

    var Item = db.Query("SELECT Id,Item,Price,Bought FROM List");
    var grid = new WebGrid(Item);



    //variable
    string displayvalue = "";
    string delete = "";
    int change=0;
    string AddItem = "";
    float Price = 0;
    int AmountOfSlots = 0;
    int i=0;
    bool Addcol;
    var temp12 = Request.QueryString["temp12"];

    if (IsPost)
    {
        //retrieve values
        displayvalue = Request.Form["Up"];//gets value from button clicked
        delete = Request.Form["Delete"];
        AddItem = Request.Form["Item"];
        Price = Request.Form["Price"].AsFloat();
        change = displayvalue.AsInt();
        AmountOfSlots = Request.Form["Slots"].AsInt();
        Addcol = Request.Form["col"].AsBool();

        if(Addcol == true)
        {
            while (AmountOfSlots > i)
            {
                i++;

                var temporarydata = db.QueryValue("INSERT INTO List (Item) VALUES(@0)", i);

            }
            var RemoveTemporarydata = db.Query("UPDATE List SET Item = null,Price = null");
            var DeleteExtra = db.Query("DELETE FROM List WHERE Id >(@0)", AmountOfSlots);
            Response.Redirect("~/List.cshtml");
            i = 0;
        }


        //switch
        if (displayvalue != null)//checks that value recieved is null
        {





            //takes to string id and chenges it to an int for calculations


            int temp = change; //save original position of selected item
            var CopyToTemp1 = db.QueryValue("UPDATE List SET TemporaryHold = Item,TemporaryHoldPrice = Price WHERE Id = (@0)", change);//copies item from col 1 to col 2
            change = change-1;//previously selected number (id) -1 to get next number to move item to
            var CopyToTemp2 = db.QueryValue("UPDATE List SET TemporaryHold = Item,TemporaryHoldPrice = Price WHERE Id = (@0)", change );//copies the item from col 1 to col 2 where the id matched the new number previously calculated

            var checkIfTop = db.QueryValue("SELECT Item FROM List WHERE Id = (@0)",change);
            if (checkIfTop is string)//if it isnt a string its a dbnull value. this is a simple way to check
            {

                var MoveItem = db.QueryValue("SELECT Item FROM List WHERE Id=(@0)", temp);//puts the selected item from col 1 into a string named: moveitem where the id matched the originally selected item (temp)
                var MovePriceUp = db.QueryValue("SELECT Price FROM List WHERE Id=(@0)", temp);

                if (MoveItem is string)
                {
                    var MovedUp = db.QueryValue("UPDATE List SET Item = (@0),Price = (@1) WHERE Id=(@2)", MoveItem, MovePriceUp, change);//puts item from previous string into the end destination in col 1. IE replaces the value above of the selected item with the selected item

                    var MoveItem2 = db.QueryValue("SELECT TemporaryHold FROM List WHERE Id=(@0)", change); //selects from col 2 de item above the selected item and puts that into a string
                    var MovePriceDown = db.QueryValue("SELECT TemporaryHoldPrice FROM List WHERE Id=(@0)", change);
                    var MovedDown = db.QueryValue("UPDATE List Set Item = (@0),Price = (@1) WHERE Id=(@2)", MoveItem2, MovePriceDown, temp);//selects previous string and places this on the position of the originally selected item. IE item click is switched with the one above

                    var DeleteDataFromTemp = db.Query("UPDATE List SET TemporaryHold = Null, TemporaryHoldPrice = Null");//clears the temporary holding list

                }

                Response.Redirect("~/List.cshtml");//to resfresh the page and update list displayed
            }


        }

        //add
        if (AddItem != "")
        {
            var Dupes = db.QueryValue("SELECT Item FROM List WHERE Item = (@0)", AddItem);
            if (Dupes != AddItem)
            {

                var num = db.QueryValue("SELECT Id FROM List WHERE Item IS NULL");//find FIRST empty space returns id
                if(num is int)
                {
                    var insertpair = db.QueryValue("UPDATE List SET Item = (@0),Price = (@1) WHERE Id = (@2)", AddItem, Price, num); //insert data into empty space
                }

                Response.Redirect("~/List.cshtml");
            }
        }

        //delete
        if(delete == "Delete")
        {

            var DeleteDataFromTemp = db.Query("UPDATE List SET TemporaryHold = Null, TemporaryHoldPrice = Null");


            foreach(var num in Item)
            {
                i++;
            }

            //var DeleteItem = db.QueryValue("UPDATE List SET Price = null");

            var DeleteItem = db.QueryValue("UPDATE List SET Item = null,Price = null WHERE Id=(@0)", i);
            Response.Redirect("~/List.cshtml");
            i = 0;
        }


    }


}
<!DOCTYPE html>
<html>
<head>
    <title>List</title>
    <link rel="stylesheet" href="~/Stylez.css" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    @*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>*@
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            //$("ol.example").sortable();

            //$('#uItem li').click(function () {
            //    var index = $(this).index();
            //    var text = $(this).text();
            //    alert('Index is: ' + index + ' and text is ' + text);
            //});
            $document.getElementById("demo").innerHTML = ui.item.index();

            $("ol.example").sortable({
                stop: function (e, ui) {
                    ui.item.index();
                }
            });
        });
    </script>

    @*$('ul').sortable({
 
    });*@
    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }

        th, td {
            padding: 5px;
        }

        th {
            text-align: left;
        }
    </style>
</head>
   
<body>
    <div class="navbar">

        <a href="~/Index.cshtml">Index</a>

        <a href="~/Register.cshtml">Register</a>

        <a href="~/List.cshtml">List</a>
    </div>

    <form method="post">
        <table>
            <tr>
                <th></th>
                <th>ID</th>
                <th>ITEM</th>
                <th>PRICE</th>
                <th>BOUGHT</th>
            </tr>
            @foreach (var LItem in Item)
            {


                <tr>
                    <td><button type="submit" value="@LItem.Id" name="Up">switch up</button></td>
                    <td>@LItem.Id</td>
                    <td>@LItem.Item</td>
                    <td>@LItem.Price</td>
                    <td>@LItem.Bought</td>
                </tr>



            }

        </table>
        <br />
        <input type="text" name="Item" placeholder="Item Name" /> <input type="number" name="Price" placeholder="Price in $" min="0" step="0.01" />
        <input type="submit" value="Add" /><br />


        <p><input type="submit" name="Delete" value="Delete" /> Deletes highest ID item on list</p> <br />

        <input type="number" name="Slots" placeholder="Enter a whole number" />
        <button type="submit" name="col" value="true">Add amount</button>
    </form>

<p id="test grid"></p>
    @grid.GetHtml(

        columns: grid.Columns(
            grid.Column("Id"),
            grid.Column("Item"),
            grid.Column("Price"),
            grid.Column(format: @<a href="~/List.cshtml?temp12=@item.Item">test</a>)
        )
    )

    @temp12
</body>

</html>
